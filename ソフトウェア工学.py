# -*- coding: utf-8 -*-
"""ソフトウェア工学.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L_1oyXVLrJDzLl-QHqF_YAH4Wi9YmJuU
"""

!pip install gradio

import gradio as gr

class EarningsCalculator:
    def __init__(self, initial_earnings, max_earnings):
        self.initial_earnings = initial_earnings
        self.max_earnings = max_earnings
        self.current_earnings = initial_earnings

    def add_daily_earnings(self, hourly_wage, hours_worked, break_time=0):
        actual_hours_worked = hours_worked - break_time
        daily_earnings = hourly_wage * actual_hours_worked
        self.current_earnings += daily_earnings
        return daily_earnings

    def remaining_earnings(self):
        return self.max_earnings - self.current_earnings

    def reset_earnings(self):
        self.current_earnings = self.initial_earnings

    def update_initial_earnings(self, new_initial_earnings):
        self.initial_earnings = new_initial_earnings
        self.current_earnings = new_initial_earnings

    def update_max_earnings(self, new_max_earnings):
        self.max_earnings = new_max_earnings

# 初期設定のための入力を受け付けるインターフェース
def setup(max_earnings, initial_earnings):
    global calculator
    calculator = EarningsCalculator(initial_earnings, max_earnings)
    return f"設定が完了しました。扶養の上限額: {max_earnings}円、今年既に稼いだ金額: {initial_earnings}円"

# 日々の稼ぎを追加するためのインターフェース
def add_earnings(hourly_wage, hours_worked, break_time=0):
    daily_earnings = calculator.add_daily_earnings(hourly_wage, hours_worked, break_time)
    remaining = calculator.remaining_earnings()
    return f"日給: {daily_earnings}円\n扶養を超えないためにあと稼げる額: {remaining}円"

# 扶養の上限額を更新するためのインターフェース
def update_max(new_max_earnings):
    calculator.update_max_earnings(new_max_earnings)
    remaining = calculator.remaining_earnings()
    return f"扶養の上限額が {new_max_earnings}円 に更新されました。\n扶養を超えないためにあと稼げる額: {remaining}円"

# 今年既に稼いだ金額を更新するためのインターフェース
def update_initial(new_initial_earnings):
    calculator.update_initial_earnings(new_initial_earnings)
    remaining = calculator.remaining_earnings()
    return f"今年既に稼いだ金額が {new_initial_earnings}円 に更新されました。\n扶養を超えないためにあと稼げる額: {remaining}円"

# Gradioのインターフェース設定
setup_interface = gr.Interface(fn=setup, inputs=["number", "number"], outputs="text")
add_earnings_interface = gr.Interface(fn=add_earnings, inputs=["number", "number", "number"], outputs="text")
update_max_interface = gr.Interface(fn=update_max, inputs="number", outputs="text")
update_initial_interface = gr.Interface(fn=update_initial, inputs="number", outputs="text")

# GradioのTabで各インターフェースをまとめる
app = gr.TabbedInterface(
    interface_list=[setup_interface, add_earnings_interface, update_max_interface, update_initial_interface],
    tab_names=["初期設定", "日々の稼ぎ追加", "扶養の上限額更新", "既に稼いだ金額更新"]
)

# Webアプリを起動
app.launch()